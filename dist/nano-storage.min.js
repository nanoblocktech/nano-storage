!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).NanoStorage=t()}(this,(function(){"use strict";var e=function(){return e=Object.assign||function(e){for(var t,s=1,r=arguments.length;s<r;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},e.apply(this,arguments)},t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:global;"undefined"==typeof Promise||t.Promise||(t.Promise=Promise);class s{constructor(e){this.database=e,this.versionCode=1,this.storages={},this.db=null,this.isOpening=!1}version(e){return this.versionCode=e,this}stores(e){for(const t in e)if(e.hasOwnProperty(t)){const s=e[t];this[t]=new r(this,t,s),this.storages[t]={config:s,table:t}}}close(){this.isOpen()&&this.db.close(),this.isOpening=!1}isOpen(){return null!==this.db}async open(e=!1){return this.isOpening=!0,e?new t.Promise(((e,t)=>{this._Open().then((()=>{e(this)})).catch((e=>{t(e)}))})):this._Open().then((()=>this))}async _Open(){if(!this.isOpen())return new t.Promise(((e,s)=>{const r=t.indexedDB.open(this.database,this.versionCode);if(!r)return this.logError("Failed to open database"),void s("Failed to open database");r.onblocked=e=>{this.logError("Please close all other tabs with this site open!")},r.onupgradeneeded=e=>{const t=e.target.result;for(const e in this.storages){const r=t.objectStoreNames.contains(e);if(this.storages.hasOwnProperty(e)&&!r){const r=this.storages[e].config,n=t.createObjectStore(e,{keyPath:"key",autoIncrement:!0}),o=r.split(",");for(var s=0;s<o.length;s++){const e=o[s]?.trim();let t="key"==e;n.createIndex(e,e,{unique:t})}}}},r.onsuccess=t=>{this.db=t.target.result,e()},r.onerror=e=>{s(e.target.error)}}))}newDatabase(){this.db.onversionchange=e=>{this.close(),this.logError("A new version of this page is ready. Please reload or close this tab!")}}delete(){return new t.Promise(((e,s)=>{const r=t.indexedDB.deleteDatabase(this.database);r.onsuccess=()=>{this.db=null,e(!0)},r.onerror=t=>{e(!1),this.logError(t.target.error)}}))}getStore(e,t){if(this.isOpen()){const s=this.db.transaction([e],t),r=s.objectStore(e);return s.oncomplete=function(){},r}return this.logError("Database is not open"),null}}class r{constructor(e,t,s){this.instance=e,this.baseTable=t,this.config=s,this.column=null,this.findKey=null,this.isOpening=!1}where(e){return this.column=e,this}equals(e){return this.findKey=this.toKey(e),this}async count(e){return this.shouldProceed()?this.instance.open(!0).then((()=>this._Count(e))).catch((e=>{this.throwError(e)})):this.dbConError()}_Count(e){return new t.Promise(((t,s)=>{const r=void 0!==e&&"function"==typeof e;let n=null;if(null===this.findKey)n={message:"Cache key cannot be empty "+this.findKey,status:0};else{const o=this.instance.getStore(this.baseTable,"readonly");if(null==o)n=this.dbError();else{let n=null;if(null==this.column)n=o.get(this.findKey);else{n=o.index(this.column).count(IDBKeyRange.only(this.findKey))}n.onsuccess=s=>{const n=s.target.result;t(n),r&&e(n)},n.onerror=n=>{t(0),r&&e(0),s(n.target.error)}}this._Reset()}null!==n&&(t(0),r&&e(0),s(n))}))}async get(e){return this.shouldProceed()?this.instance.open(!0).then((()=>this._Get(e))).catch((e=>{this.throwError(e)})):this.dbConError()}_Get(e){const s=this.instance.getStore(this.baseTable,"readonly");let r=null,n=null;if(null===s)n=this.dbError();else if(void 0===e.key){const t=Object.keys(e);if(1===t.length&&"key"!==t[0]){const n=s.index(t[0]);r=n.get(this.toKey(e[t[0]]))}else r=s.get(this.toKey(e.key))}else r=s.get(this.toKey(e.key));return new t.Promise(((e,t)=>{null===r?n=this.dbError():(r.onsuccess=t=>{e(t.target.result)},r.onerror=s=>{e(void 0),t(s.target.error)}),null!==n&&(e(void 0),t(n))}))}async put(e,t=!1){if(!this.shouldProceed())return this.dbConError();try{return await this.instance.open(!0),await this._Put(e,t)}catch(e){this.throwError(e)}}async _Put(e,s=!1){const r=this.instance.getStore(this.baseTable,"readwrite");let n=!1,o=null;if(null===r)o=this.dbError();else if(e.key){e.key=this.toKey(e.key);try{await r.put(e);n=!0}catch(e){o=e,this.throwError(o)}if(s)return new t.Promise(((e,t)=>{e(n),null!==o&&t(o)}))}else o="Cache key is missing or invalid";return null!==o&&this.logError(o),n}delete(){return this.shouldProceed()?this.instance.open(!0).then((()=>this._Delete())).catch((e=>{this.throwError(e)})):this.dbConError()}_Delete(){return new t.Promise(((e,t)=>{let s=null;if(null===this.findKey)s="Cache key cannot be empty";else{const r=this.instance.getStore(this.baseTable,"readwrite");if(null==r)s=this.dbError();else{let s=null;if(null==this.column)s=r.delete(this.findKey),s.onsuccess=()=>{e(!0)},s.onerror=s=>{e(!1),t(s.target.error)};else{r.index(this.column).openCursor(IDBKeyRange.only(this.findKey)).onsuccess=r=>{const n=r.target.result;n?(s=n.delete(),s.onsuccess=()=>{e(!0)},s.onerror=s=>{e(!1),t(r.target.error)}):(e(!1),t("No matching record found"))}}}this._Reset()}null!==s&&(e(!1),t(s))}))}clear(){return this.shouldProceed()?this.instance.open(!0).then((()=>this._Clear())).catch((e=>{this.throwError(e)})):this.dbConError()}_Clear(){return new t.Promise(((e,t)=>{const s=this.instance.getStore(this.baseTable,"readwrite");if(null==s)e(!1),t(this.dbError());else{const r=s.clear();r.onsuccess=()=>{e(!0)},r.onerror=s=>{e(!1),t(s.target.error)}}}))}dbConError(){return t.Promise.reject({message:"Database is not open",status:500})}shouldProceed(){const e=this.instance.isOpening&&!this.instance.isOpen()||this.instance.isOpen();return e}logError(e){}throwError(e){this.logError(e);throw{message:e.message,status:500}}dbError(){return{message:"Database connection error",status:0}}_Reset(){this.column=null,this.findKey=null}toKey(e){let t=e?.trim().toLowerCase();return t=t.split(" ").pop(),t}}var n=Object.freeze({__proto__:null,NanoStorage:s,default:s});return e(s,n,{default:s}),s}));
